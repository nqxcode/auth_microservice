version: '3'

volumes:
  postgres_volume:
  redis_volume:
  prometheus_data:
  grafana_data:

services:
  pg:
    image: postgres:14-alpine3.17
    env_file:
      - .env
    ports:
      - "54322:5432"
    volumes:
      - postgres_volume:/var/lib/postgresql/data

  migrator:
    build:
      context: .
      dockerfile: migration.Dockerfile
    env_file:
      - .env
    restart: on-failure

  redis:
    image: redis:7.2.5-alpine3.20
    command: >
      --requirepass ${REDIS_PASSWORD}
    ports:
      - "6379:6379"
    env_file:
      - .env
    volumes:
      - "redis_volume:/data"

  zookeeper:
    image: confluentinc/cp-zookeeper:7.6.1
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181" # порт для клиентских соединений Zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181 # порт для клиентских соединений Zookeeper
      ZOOKEEPER_TICK_TIME: 2000 # основной интервал времени (в миллисекундах), используемый Zookeeper

  kafka1:
    image: confluentinc/cp-kafka:7.6.1
    hostname: kafka1
    container_name: kafka1
    depends_on:
      - zookeeper # указывает, что Kafka зависит от сервиса Zookeeper и будет запущен после него
    ports:
      - "9092:9092" # порт для клиентских соединений Kafka
      - "29092:29092" # порт для клиентских соединений Kafka
    environment:
      KAFKA_BROKER_ID: 1 # уникальный идентификатор брокера Kafka
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181' # адрес подключения к Zookeeper
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT # указывает протоколы безопасности для слушателей
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka1:29092,PLAINTEXT_HOST://localhost:9092 # указывает, какие адреса будут использоваться для общения с Kafka
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3 # фактор репликации топика
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0 # время задержки перед началом перебалансировки группы
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 2 # минимальное количество реплик, которые должны быть в синхронизации для топика состояния транзакции
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 3 # фактор репликации топика состояния транзакции

  kafka2:
    image: confluentinc/cp-kafka:7.6.1
    hostname: kafka2
    container_name: kafka2
    depends_on:
      - zookeeper # указывает, что Kafka зависит от сервиса Zookeeper и будет запущен после него
    ports:
      - "9093:9093" # порт для клиентских соединений Kafka
      - "29093:29093" # порт для клиентских соединений Kafka
    environment:
      KAFKA_BROKER_ID: 2 # уникальный идентификатор брокера Kafka
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181' # адрес подключения к Zookeeper
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT # указывает протоколы безопасности для слушателей
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka2:29093,PLAINTEXT_HOST://localhost:9093 # указывает, какие адреса будут использоваться для общения с Kafka
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3 # фактор репликации топика смещений
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0 # время задержки перед началом перебалансировки группы
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 2 # минимальное количество реплик, которые должны быть в синхронизации для топика состояния транзакции
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 3 # фактор репликации топика состояния транзакции

  kafka3:
    image: confluentinc/cp-kafka:7.6.1
    hostname: kafka3
    container_name: kafka3
    depends_on:
      - zookeeper # указывает, что Kafka зависит от сервиса Zookeeper и будет запущен после него
    ports:
      - "9094:9094" # порт для клиентских соединений Kafka
      - "29094:29094" # порт для клиентских соединений Kafka
    environment:
      KAFKA_BROKER_ID: 3 # уникальный идентификатор брокера Kafka
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181' # адрес подключения к Zookeeper
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT # указывает протоколы безопасности для слушателей
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka3:29094,PLAINTEXT_HOST://localhost:9094 # указывает, какие адреса будут использоваться для общения с Kafka
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3 # фактор репликации топика смещений
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0 # время задержки перед началом перебалансировки группы
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 2 # минимальное количество реплик, которые должны быть в синхронизации для топика состояния транзакции
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 3 # фактор репликации топика состояния транзакции

  kafka-ui:
    container_name: kafka-ui
    image: provectuslabs/kafka-ui:v0.7.2
    ports:
      - "8082:8080" # порт для клиентских соединений Kafka UI
    environment:
      - "KAFKA_CLUSTERS_0_NAME=auth"
      - "KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka1:29092,kafka2:29093,kafka3:29094"

  prometheus:
    image: prom/prometheus:v2.37.9
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - ./alerts.yml:/etc/prometheus/alerts.yml
      - prometheus_data:/prometheus
    extra_hosts:
      - "host.docker.internal:host-gateway"

  grafana:
    image: grafana/grafana-oss:10.0.3
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana

  jaeger:
    image: jaegertracing/all-in-one:1.48
    ports:
      - "5775:5775/udp"
      - "6831:6831/udp" # jaeger-client
      - "6832:6832/udp"
      - "5778:5778"
      - "16686:16686" # web
      - "14268:14268"
      - "9411:9411"
